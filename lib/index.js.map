{"version":3,"file":"index.js","sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/./src/frame/index.js","webpack://[name]/./src/frame/model/BaseModel.js","webpack://[name]/./src/frame/model/Event.js","webpack://[name]/./src/frame/model/connect.js","webpack://[name]/./src/frame/model/createStore.js","webpack://[name]/./src/frame/model/index.js","webpack://[name]/./src/frame/render/extend.js","webpack://[name]/./src/frame/render/index.js","webpack://[name]/./src/frame/render/render.js","webpack://[name]/./src/frame/utils/getProtoList.js","webpack://[name]/external \"React\""],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"React\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"React\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"index\"] = factory(require(\"React\"));\n\telse\n\t\troot[\"index\"] = factory(root[\"React\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE_react__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/frame/index.js\");\n","import {render} from './render';\n\nimport {Model, createStore, connect} from './model';\n\nlet data = {};\n\nlet setData = (key, value) => {\n    data[key] = value\n};\n\nlet getData = (key) => {\n    return data[key]\n}\n\nlet finalStart = createStore({setData, getData});\nlet finalRender = render({setData, getData});\n\nexport {\n    finalRender as render,\n    Model,\n    finalStart as createStore,\n    connect\n}","\nimport EventClass from './Event';\n\nexport default class BaseModel extends EventClass {\n    constructor(model) {\n        super();\n\n        // this.model = model;\n        // 存储上一次已改变的值\n        this.changed = {};\n    }\n\n    set(args1, args2) {\n        if(args2 === undefined) {\n            if(Object.prototype.toString.call(args1) === '[object Object]') {\n                Object.keys(args1)\n                    .forEach((key) => {\n                        this.changed[key] = this.data[key];\n                        this.data[key] = args1[key];\n                        this.trigger(`change:${key}`, args1[key]);\n                    });\n                this.trigger('change', args1);\n            }\n            else {\n                throw new Error('如果只穿一个参数，必须传入一个对象');\n            }\n        }\n        else {\n            this.changed[args1] = this.data[args1];\n            this.data[args1] = args2;\n            this.trigger(`change:${args1}`, {\n                [args1]: args2\n            });\n            this.trigger('change', {\n                [args1]: args2\n            });\n        }\n    }\n\n    get(key) {\n        if(key) {\n            return this.data[key];\n        }\n        else {\n            return this.data;\n        }\n    }\n\n    has(attribute) {\n        const {data} = this;\n\n        if(data[attribute] === undefined || data[attribute] === null) {\n            return false;\n        }\n\n        return true\n    }\n\n    // 深拷贝\n    deepClone(data) {\n        let copyData = {};\n\n        if(data === undefined) {\n            data = this.data;\n        }\n        Object.keys(data)\n            .forEach((key) => {\n                if(typeof data[key] === 'object') {\n                    copyData[key] = this.deepClone(data[key]);\n                }\n                else {\n                    copyData[key] = data[key];\n                }\n            });\n\n        return copyData;\n    }\n\n    // 获取上一次修改前的值\n    previous(attribute) {\n        let data = Object.assign({}, this.data, this.changed);\n\n        if(attribute) {\n            return data[attribute];\n        }\n        \n        return data;\n    }\n}","\n\nexport default class Event {\n    constructor() {\n        this.funcs = {};\n    }\n\n    on = (eventName, callback) => {\n        if(!this.funcs[eventName]) {\n            this.funcs[eventName] = [];\n        }\n\n        this.funcs[eventName].push(callback);\n    }\n\n    off = (eventName, callback) => {\n        let funcs = this.funcs[eventName];\n\n        if(Array.isArray(funcs)) {\n            let callbackIndex = funcs.findIndex(callback);\n\n            if(callbackIndex > -1) {\n                funcs.splice(callbackIndex, 1);\n                this.funcs[eventName] = funcs;\n            }\n            else {\n                this.funcs[eventName] = [];\n            }\n        }\n    }\n\n    trigger = (eventName, ...args) => {\n        let funcs = this.funcs[eventName];\n\n        if(Array.isArray(funcs)) {\n            funcs.forEach((callback) => {\n                typeof callback === 'function' && callback(...args);\n            });\n        }\n    }\n}","import React from 'react';\n\nexport default function connect(HomePage) {\n\n    return class extends React.Component {\n        constructor(props) {\n            super(props);\n\n            this.state = {};\n\n            Object.values(props.store)\n                .forEach((model) => {\n                    this.state[model.name] = model.data;\n\n                    model.on('change', (obj) => {\n                        this.setState({\n                            [model.name]: model.data\n                        });\n                    });\n                });\n        }\n\n        render() {\n            return (\n                <HomePage\n                    {...this.props}\n                    {...this.state}\n                />\n            );\n        }\n    }\n\n}","\n\nimport BaseModel from './BaseModel';\nimport getProtoList from '../utils/getProtoList';\n\nexport default ({setData, getData}) => (modelList = [], options) => {\n    let originModelInstance = getData('modelInstanceList') || {};\n    // 存储model类的列表\n    setData('ModelClassList', modelList);\n\n    let modelInstance = originModelInstance;\n    // 实例化所有model类\n    modelList.forEach((Model, index) => {\n        let proto = getProtoList(Model).prototypes;\n\n        let model = new Model();\n\n        if(!(model instanceof BaseModel)) {\n            let base = new BaseModel(model);\n            Object.setPrototypeOf(proto, base);\n            // proto.__proto__ = base\n        }\n\n        if(!model.name) {\n            throw new Error('Every Model Need A Name Attribute');\n        }\n        else if(!model.data) {\n            throw new Error('Every Model Need A Data Attribute');\n        }\n\n        modelInstance[model.name] = model;\n    });\n\n    // 存储model实例\n    setData('modelInstanceList', modelInstance);\n\n    return modelInstance;\n}","\n\nimport BaseModel from './BaseModel';\nimport createStore from './createStore';\nimport connect from './connect';\n\nexport {\n    BaseModel as Model,\n    createStore,\n    connect\n}","\nimport getProtoList from '../utils/getProtoList';\n\n\nexport default function(Action) {\n\n    // 拿到action里配置的父类\n    let Parents = Action.extends;\n    // 将父类的所有prototype存储起来\n    let prototypes = [];\n    // 存储主类的prototype\n    let mainActionProto = getProtoList(Action);\n    // 存储父类实例上的方法\n    let instanceProp = {};\n\n    // 遍历父类，取出父类的proto，并且拿到父类实例方法\n    Parents.forEach((Parent, index) => {\n        prototypes.push(getProtoList(Parent));\n        \n        let parent = new Parent();\n\n        Reflect.ownKeys(parent).forEach((key) => {\n            instanceProp[key] = parent[key];\n        });\n    });\n    // 最后一个将父类实例方法当成prototype挂上去\n    prototypes.push({\n        result: instanceProp,\n        prototypes: instanceProp\n    });\n    // 主类在数组最后，最终所有的父类方法放到主类prototype上\n    prototypes.push(mainActionProto);\n\n    let len = prototypes.length;\n\n    // 设置prototype链\n    prototypes.forEach((obj, index) => {\n        if(index < len - 1) {\n            Object.setPrototypeOf(prototypes[index + 1].prototypes, obj.result);\n            // prototypes[index + 1].prototypes.__proto__ = obj.result;\n        }\n        else {\n            // console.log(obj.result);\n        }\n    });\n}","\nimport render from './render';\n\n\nexport {\n    render\n}","\nimport React from 'react';\nimport extend from './extend';\n\nexport default ({getData, setData}) => (options = {}) => {\n\n    return (CustomComponent) => {\n\n        // 存储action实例，最终会挂在每个action上\n        let action = {};\n        // 存储action里的生命周期函数\n        let lifeCycle = {\n            'didMount': [],\n            'didUpdate': [],\n            'willUnMount': [],\n            'shouldUpdate': [],\n            'didAllInstance': []\n        };\n\n        return class extends React.Component {\n            constructor(props) {\n                super(props);\n\n                // model实例\n                let modelInstance = getData('modelInstanceList');\n                setData('modelInstanceList', {});\n\n                // 如果配置了actions\n                if(options.actions) {\n                    Object.keys(options.actions)\n                        .forEach((actionKey) => {\n                            // 取得action类\n                            let Action = options.actions[actionKey];\n\n                            // 检查每个action是否有配置静态的extends属性，如果有，执行extend函数\n                            if(Array.isArray(Action.extends)) {\n                                extend(Action);\n                            }\n                            // 实例化action\n                            let actionInstance = new Action(this);\n\n                            // 检查action实例里是否定义了生命周期\n                            Object.keys(lifeCycle).forEach((key) => {\n                                if(typeof actionInstance[key] === 'function') {\n                                    lifeCycle[key].push(actionInstance[key].bind(actionInstance));\n                                }\n                            });\n\n                            // 实例化action\n                            action[actionKey] = actionInstance;\n                            // 给action挂载model方法\n                            actionInstance.models = modelInstance;\n                            // 给action setState的能力\n                            actionInstance.setState = this.setState.bind(this);\n                            // 实例拿到actions\n                            actionInstance.actions = action;\n                            // 拿到组件实例\n                            actionInstance.$instance = this;\n\n                            // 实例化完成的勾子\n                            if(typeof actionInstance['didInstance'] === 'function') {\n                                actionInstance['didInstance'].call(actionInstance);\n                            }\n                        });\n                    \n                    // 执行生命周期函数\n                    lifeCycle['didAllInstance'].forEach((fn) => {\n                        typeof fn === 'function' && fn();\n                    });\n                } \n\n                // 设置state\n                if(options.state) {\n                    this.state = {\n                        ...options.state\n                    }\n                }\n            }\n\n            shouldComponentUpdate() {\n                let flag = true;\n                lifeCycle['shouldUpdate'].forEach((fn) => {\n                    if(typeof fn === 'function') {\n                        if(fn() === false) {\n                            flag = false\n                        }\n                    }\n                });\n\n                return flag;\n            }\n\n            componentWillUnmount() {\n                lifeCycle['willUnMount'].forEach((fn) => {\n                    typeof fn === 'function' && fn();\n                });\n            }\n\n            componentDidUpdate() {\n                lifeCycle['didUpdate'].forEach((fn) => {\n                    typeof fn === 'function' && fn();\n                });\n            }\n\n            componentDidMount() {\n                lifeCycle['didMount'].forEach((fn) => {\n                    typeof fn === 'function' && fn();\n                });\n            }\n\n            render() {\n                return (\n                    <CustomComponent \n                        action={action}\n                        state={this.state}\n                        props={this.props}\n                    />\n                )\n            }\n        }\n\n    }\n}","// 获取prototype链\n// 获取当前类的所有prototype链\nexport default function getProtoList(Func) {\n    let prototypes = {};\n    let result = prototypes;\n    let __proto = [Func.prototype];\n\n    while(__proto.length > 0) {\n        let proto = __proto.shift();\n\n        // prototypes.__proto__ = proto;\n        Object.setPrototypeOf(prototypes, proto);\n\n        // 首先检测proto的__proto__属性是不是Object\n        let cProto = Object.getPrototypeOf(proto);\n        \n        if(cProto) {\n        // if(proto.__proto__) {\n            // __proto.push(proto.__proto__);\n            __proto.push(cProto);\n            let prototypesProto = Object.getPrototypeOf(prototypes);\n            // prototypes = prototypes.__proto__;\n            prototypes = prototypesProto;\n        }\n    }\n\n    return {\n        result: result,\n        prototypes: prototypes\n    };\n}","module.exports = __WEBPACK_EXTERNAL_MODULE_react__;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAGA;AACA;AAAA;AALA;AAMA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAGA;AACA;;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AApFA;AACA;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AADA;AACA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AA3BA;AA4BA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApCA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AAEA;AAEA;AAEA;AACA;AAGA;AACA;AAdA;AAeA;AACA;AAjBA;AAAA;AAAA;AAmBA;AAMA;AAzBA;AACA;AADA;AAAA;AAAA;AA4BA;;;;;;;;;;;;AC9BA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAhCA;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;ACHA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACA;;;;;;;;;;;;AC5CA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAzDA;AAyDA;AACA;AA3DA;AAAA;AAAA;AA6DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAvEA;AAAA;AAAA;AA0EA;AACA;AACA;AACA;AA7EA;AAAA;AAAA;AAgFA;AACA;AACA;AACA;AAnFA;AAAA;AAAA;AAsFA;AACA;AACA;AACA;AAzFA;AAAA;AAAA;AA4FA;AAEA;AACA;AACA;AAHA;AAMA;AAnGA;AACA;AADA;AAAA;AAAA;AAsGA;AACA;AAtHA;;;;;;;;;;;;ACJA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;AC9BA;;;;;A","sourceRoot":""}